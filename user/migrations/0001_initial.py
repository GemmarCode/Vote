# Generated by Django 4.2.20 on 2025-04-27 17:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_number', models.CharField(max_length=20, unique=True)),
                ('student_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('year_level', models.CharField(choices=[('1', 'First Year'), ('2', 'Second Year'), ('3', 'Third Year'), ('4', 'Fourth Year'), ('5', 'Fifth Year')], max_length=20)),
                ('course', models.CharField(max_length=100)),
                ('college', models.CharField(choices=[('CAS', 'College of Arts and Sciences'), ('CAF', 'College of Agriculture and Forestry'), ('CCJE', 'College of Criminal Justice Education'), ('CBA', 'College of Business Administration'), ('CTED', 'College of Teacher Education'), ('CIT', 'College of Industrial Technology')], max_length=10)),
                ('school_year', models.CharField(help_text='Format: YYYY-YYYY', max_length=9)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profile',
                'unique_together': {('student_number', 'school_year')},
            },
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_number', models.CharField(max_length=20)),
                ('code', models.CharField(max_length=6, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='VotingPhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('ONGOING', 'Ongoing'), ('ENDED', 'Ended')], default='NOT_STARTED', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FaceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('face_embedding', models.BinaryField()),
                ('face_image', models.ImageField(upload_to='face_data/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='face_data', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100)),
                ('achievements', models.TextField(help_text="List the candidate's achievements, one per line")),
                ('platform', models.TextField(help_text="Describe the candidate's platform and goals")),
                ('photo', models.ImageField(blank=True, null=True, upload_to='candidate_photos/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('PRESIDENT', 'President'), ('VICE_PRESIDENT', 'Vice President'), ('SECRETARY', 'Secretary'), ('TREASURER', 'Treasurer'), ('AUDITOR', 'Auditor'), ('PIO', 'Public Information Officer'), ('REPRESENTATIVE', 'Representative'), ('GOVERNOR', 'Governor'), ('VICE_GOVERNOR', 'Vice Governor'), ('SECRETARY_COLLEGE', 'Secretary (College)'), ('TREASURER_COLLEGE', 'Treasurer (College)'), ('AUDITOR_COLLEGE', 'Auditor (College)'), ('PRO_COLLEGE', 'Public Information Officer (College)'), ('MAYOR', 'Mayor'), ('VICE_MAYOR', 'Vice Mayor'), ('SECRETARY_DEPT', 'Secretary (Department)'), ('TREASURER_DEPT', 'Treasurer (Department)'), ('AUDITOR_DEPT', 'Auditor (Department)'), ('PRO_DEPT', 'Public Information Officer (Department)'), ('REPRESENTATIVE_DEPT', 'Department Representative')], max_length=50)),
                ('platform', models.TextField(blank=True, default='', help_text="Describe the candidate's platform and goals")),
                ('achievements', models.TextField(blank=True, default='', help_text="List the candidate's achievements, one per line")),
                ('photo', models.ImageField(blank=True, null=True, upload_to='candidate_photos/')),
                ('school_year', models.CharField(help_text='Format: YYYY-YYYY', max_length=9)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.userprofile')),
            ],
            options={
                'db_table': 'user_candidate',
                'ordering': ['position'],
                'unique_together': {('user_profile', 'school_year')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('school_year', models.CharField(help_text='Format: YYYY-YYYY', max_length=9)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.candidate')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.userprofile')),
            ],
            options={
                'db_table': 'user_vote',
                'unique_together': {('user_profile', 'candidate', 'school_year')},
            },
        ),
    ]
